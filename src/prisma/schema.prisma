// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstname String
  lastname  String
  password  String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          Int                 @id @default(autoincrement())
  title       String              @db.VarChar(255)
  description String
  image       String
  price       Float
  author      User                @relation(fields: [authorId], references: [id])
  authorId    Int
  categories  CategoriesOnPosts[]
  rating      Rating              @relation(fields: [ratingId], references: [id])
  ratingId    Int                 @unique
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
}

model Category {
  id        Int                 @id @default(autoincrement())
  name      String              @unique @db.VarChar(255)
  products  CategoriesOnPosts[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

model CategoriesOnPosts {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@id([productId, categoryId])
}

model Rating {
  id        Int      @id @default(autoincrement())
  rate      Float
  count     Int
  product   Product?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model User {
//   id          Int                @id @default(autoincrement())
//   name        String
//   investments UsersInvestments[]
// }

// model UsersInvestments {
//   user         User       @relation(fields: [userId], references: [id])
//   userId       Int
//   investment   Investment @relation(fields: [investmentId], references: [id])
//   investmentId Int

//   @@id([userId, investmentId])
// }

// model Investment {
//   id    Int                @id @default(autoincrement())
//   users UsersInvestments[]
// }
